'use client';
import { useRouter } from "next/navigation";
import React from "react";

export default function AliasPage() {
  const router = useRouter();
  const [alias, setAlias] = React.useState("");
  const [pin, setPin] = React.useState("");
  const [error, setError] = React.useState("");

  async function submit() {
    setError("");
    const a = alias.trim();
    const p = pin.trim();
    if (!a) return setError("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ô‡∏≤‡∏°‡πÅ‡∏ù‡∏á");
    if (!/^\d{4}$/.test(p)) return setError("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™ 4 ‡∏´‡∏•‡∏±‡∏Å (‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç)");

    // ‡∏•‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏Ñ‡πà‡∏≠‡∏¢‡∏™‡∏°‡∏±‡∏Ñ‡∏£
    let res = await fetch("/api/auth/login", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ alias: a, pin: p }),
    });

    if (res.status === 404) {
      // ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
      res = await fetch("/api/auth/register", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ alias: a, pin: p }),
      });
    }

    if (!res.ok) {
      const msg = await res.json().catch(() => ({}));
      return setError(msg?.error || "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î");
    }

    // ‡πÄ‡∏Å‡πá‡∏ö alias ‡∏ù‡∏±‡πà‡∏á client ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• (‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏à‡∏£‡∏¥‡∏á‡∏î‡∏π‡∏à‡∏≤‡∏Å cookie)
    localStorage.setItem("alias", JSON.stringify(a));
    router.push("/feed");
  }

  return (
    <main className="min-h-screen bg-gray-100 py-8">
      <div className="max-w-xl mx-auto px-4">
        <h1 className="text-3xl font-bold">‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ô‡∏≤‡∏°‡πÅ‡∏ù‡∏á üë§</h1>
        <div className="bg-white rounded-2xl shadow-sm p-5 space-y-4 mt-4">
          <label className="block text-sm font-medium">‡∏ô‡∏≤‡∏°‡πÅ‡∏ù‡∏á</label>
          <input
            value={alias}
            onChange={(e) => setAlias(e.target.value)}
            onKeyDown={(e) => e.key === "Enter" && submit()}
            className="w-full rounded-xl border border-gray-300 px-3 py-2"
            placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÅ‡∏°‡∏ß‡∏´‡∏•‡∏±‡∏ö, ‡∏™‡∏∏‡∏î‡∏´‡∏•‡πà‡∏≠, ‡∏Ø‡∏•‡∏Ø"
          />

          <label className="block text-sm font-medium mt-2">‡∏£‡∏´‡∏±‡∏™ 4 ‡∏´‡∏•‡∏±‡∏Å</label>
          <input
            value={pin}
            onChange={(e) => setPin(e.target.value.replace(/\D/g, "").slice(0, 4))}
            onKeyDown={(e) => e.key === "Enter" && submit()}
            inputMode="numeric"
            className="w-full rounded-xl border border-gray-300 px-3 py-2 tracking-widest"
            placeholder="‡πÄ‡∏ä‡πà‡∏ô 1234"
          />

          {error && <p className="text-red-600 text-sm">{error}</p>}
          <div className="flex justify-end">
            <button onClick={submit} className="rounded-xl bg-blue-600 hover:bg-blue-700 text-white px-4 py-2">
              ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
            </button>
          </div>
        </div>
      </div>
    </main>
  );
}
